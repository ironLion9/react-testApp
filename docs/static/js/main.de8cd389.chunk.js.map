{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","Form","onSubmit","e","preventDefault","trim","length","c","className","Button","Input","type","onChange","target","value","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"sOAgDeA,EA5CK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OACI,eAACC,EAAA,EAAD,CAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEGL,EAAWM,OAAOC,OAAS,IAC5BT,GAAc,SAAAU,GAAC,OAAKR,GAAL,mBAAoBQ,OACnCP,EAAc,MAQlB,UACA,oBAAIQ,UAAU,QAAd,0BACA,cAACC,EAAA,EAAD,oBAFA,OAIA,cAACC,EAAA,EAAD,CACIC,KAAK,OACLC,SAxBkB,SAAET,GACxBH,EAAcG,EAAEU,OAAOC,QAwBnBA,MAAOf,EACPgB,YAAa,mB,iCChCZC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGbC,EAHa,iDAGmCC,UAAUH,GAH7C,+DAKAI,MAAMF,GALN,cAKbG,EALa,gBAOIA,EAAKC,OAPT,uBAOXC,EAPW,EAOXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAbvB,kBAiBZM,GAjBY,4CAAH,sDCYLO,EAbK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAG1B,OADAc,QAAQC,IAAIL,EAAOV,GAEf,sBAAKX,UAAU,yDAAf,UACI,qBACI2B,IAAMhB,EACNiB,IAAKP,IACT,kCAAMA,SCuBHQ,EA5BC,SAAC,GAAmB,IAAhBpB,EAAe,EAAfA,SAGhB,ECHwB,SAAEA,GAG1B,MAA0BnB,mBAAS,CAC/B0B,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KA2BA,OApBAC,qBAAW,WAEPzB,EAASC,GACJyB,MAAM,SAAAC,GAEHC,YAAY,WACRJ,EAAU,CACNhB,KAAMmB,EACNL,SAAS,MAEd,UAKZ,CAAErB,IAKEsB,ED3BmBM,CAAc5B,GAAhCO,EAAR,EAAQA,KAAMc,EAAd,EAAcA,QAGd,OAGI,qCAEA,6BAAKrB,IAEHqB,GAAW,yCACZ,qBAAK9B,UAAU,YAAf,SAEYgB,EAAKE,KAAK,SAAAC,GAAG,OACV,cAAC,EAAD,eAEUA,GADDA,EAAIC,aE6BtBkB,EAxCM,SAAC,GAAY,EAAXhC,MAAY,IAE/B,EAAoChB,mBAAS,CAAC,YAA9C,mBAAOiD,EAAP,KAAmBlD,EAAnB,KAUA,OACI,qCAEA,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEO6B,IAAKqB,GAAY,SAAA9B,GACR,OACG,cAAC,EAAD,CAECA,SAAWA,GADNA,YC7BjC+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.de8cd389.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport { Input, Button, Form} from 'reactstrap';\nimport Proptypes from 'prop-types';\n\nconst AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n\n    const handleInputChange = ( e ) => {\n        setInputValue(e.target.value);\n    }\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2 ) {\n            setCategories(c => [inputValue, ...c]);\n            setInputValue('');\n\n        }\n\n    }\n\n\n    return (\n        <Form onSubmit= { handleSubmit }>\n        <h2 className='title'>Add Category</h2>\n        <Button> Add </Button> \n        &nbsp;\n        <Input\n            type=\"text\"\n            onChange={ handleInputChange }\n            value={inputValue}\n            placeholder={'Ingrese...'}\n            />\n                 \n        </Form>\n    )\n};\n\n\nAddCategory.propTypes =  {\n    setCategories: Proptypes.func.isRequired\n};\n\n\nexport default AddCategory;\n","\n\n\nexport const getGifs = async( category ) => {\n\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Qzd1dJMciGgQGzACSrsLvTrF3LSvFqpy`;\n\n    const resp = await fetch(url);\n\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n        }\n    })\n\n    return gifs;\n}\n","import React from 'react';\n\nconst GifGridItem = ( {title, url} ) => {\n\n    console.log(title, url)\n    return (\n        <div className=\"card animate__animated animate__bounce animate__faster\">\n            <img  \n                src={ url } \n                alt={title} />\n            <p> { title }</p>\n        </div>\n    )\n}\n\nexport default GifGridItem;\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ( { category }) => {\n\n\n    const { data, loading } = useFetchGifs( category );\n\n\n    return (\n\n\n        <>\n\n        <h3>{category}</h3>\n\n        { loading && <h4>Loading</h4>}\n         <div className=\"card-grid\">\n                 {\n                     data.map( img => (\n                        <GifGridItem\n                            key={img.id}\n                             { ...img }/>\n                     ))\n                 }\n         </div>\n\n        </>\n    )\n}\n\nexport default GifGrid\n","import {useEffect, useState} from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\n\n\nexport const useFetchGifs = ( category ) => {\n\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n\n\n    });\n\n    useEffect( () => {\n\n        getGifs( category )\n            .then( imgs => {\n\n                setTimeout( () => {\n                    setState( {\n                        data: imgs,\n                        loading: false\n                    });\n                }, 3000);\n\n            }\n        )\n        \n    }, [ category ]) \n    \n\n\n\n    return state;\n}","import React, { useState } from 'react';\nimport map from 'lodash/map';\n\n\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\n\n\n\n\n\nconst GifExpertApp = ({value}) => {\n\n    const [categories, setCategories] = useState(['Samsung']);\n\n    //  console.log(categories)\n\n    //  const handleAdd = ({value}) => {\n    //     setCategories( c => [...c, value])\n    //  };\n\n\n\n    return (\n        <>\n\n        <h2>GifExpertApp</h2>\n        <AddCategory setCategories={ setCategories }/>\n        <hr/>\n\n        <ol>\n            {\n               map( categories, category => {\n                        return (\n                           <GifGrid\n                            key={category}\n                            category={ category } />\n                    )\n                })\n            }\n        </ol>\n        \n\n        </>\n    )\n\n\n\n};\n\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n// import GifGridItem from './components/GifGridItem';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}